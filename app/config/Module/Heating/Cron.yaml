---

jobs:

  # STOP FORCED ON/OFF

  # Force OFF
  - interval: 60
    if:
      - ${Properties.selfObjectName}.forceOff is true
      - ${Properties.selfObjectName}.forceOff.timeSince >= ${Properties.force-off-seconds}
    set:
      ${Properties.selfObjectName}.forceOff: 'false'
    run:
      - SystemNotify.send('${Properties.selfObjectName} deactivated force off')
      - SystemWarn.send('${Properties.selfObjectName} deactivated force off')

  # Force ON
  - interval: 60
    if:
      - ${Properties.selfObjectName}.forceOn is true
      - ${Properties.selfObjectName}.forceOn.timeSince >= ${Properties.force-on-seconds}
    set:
      ${Properties.selfObjectName}.forceOn: 'false'
    run:
      - SystemNotify.send('${Properties.selfObjectName} deactivated force on')
      - SystemWarn.send('${Properties.selfObjectName} deactivated force on')

  # SYNC WITH CONTROLLER

  - interval: 60
    if:
      - ${Properties.controller}.status != ${Properties.selfObjectName}.status
      - ${Properties.controller}.status is on
    run:
      - SystemNotify.send('${Properties.selfObjectName} RESYNC with controller!')
      - SystemWarn.send('${Properties.selfObjectName} RESYNC with controller!')
    set:
      ${Properties.selfObjectName}.status: 'on'

  - interval: 60
    if:
      - ${Properties.controller}.status != ${Properties.selfObjectName}.status
      - ${Properties.controller}.status is off
    run:
      - SystemNotify.send('${Properties.selfObjectName} RESYNC with controller!')
      - SystemWarn.send('${Properties.selfObjectName} RESYNC with controller!')
    set:
      ${Properties.selfObjectName}.status: 'off'
