---

functions:

  lightOn():
    runIf:
      - ${Properties.light.object}.status is not 'on'
    runFunctions:
      - ${Properties.light.object}.on()
      - ${Properties.light.object}.temperature('${Properties.light.temperature}')
      - ${Properties.light.object}.brightness('${Properties.light.brightness}')
    set:
      forceLightOff: 'false'

  secondaryLightOn():
    runIf:
      - ${Properties.light.secondary.object}.status is not 'on'
    runFunctions:
      - ${Properties.light.secondary.object}.on()
      - ${Properties.light.secondary.object}.temperature('${Properties.light.secondary.temperature}')
      - ${Properties.light.secondary.object}.brightness('${Properties.light.secondary.brightness}')

  nightLightOn():
    runIf:
      - ${Properties.light.night.object}.status is not 'on'
      - ${Properties.selfObjectName}.gotNaturalLight is false
    runFunctions:
      - ${Properties.light.night.object}.on()

  lightOff():
    runIf:
      - ${Properties.light.object}.status is not 'off'
    runFunctions:
      - ${Properties.light.object}.off()
    set:
      forceLightOn: 'false'

  secondaryLightOff():
    runIf:
      - ${Properties.light.secondary.object}.status is not 'off'
    runFunctions:
      - ${Properties.light.secondary.object}.off()

  nightLightOff():
    runIf:
      - ${Properties.light.night.object}.status is not 'off'
    runFunctions:
      - ${Properties.light.night.object}.off()

  allLightsOff():
    runFunctionsAsync:
      - ${Properties.selfObjectName}.lightOff()
      - ${Properties.selfObjectName}.secondaryLightOff()
      - ${Properties.selfObjectName}.nightLightOff()
      - ${Properties.ledstrip.object}.off()

  off():
    runFunctionsAsync:
      - ${Properties.selfObjectName}.allLightsOff()
      - ${Properties.tv.object}.off()
      - ${Properties.tv.audio-system.object}.off()
      - ${Properties.diffuser.object}.off()

  lightWarn():
    runIf: ${Properties.light.object}.status is not 'offline'
    runFunctions:
      - ${Properties.light.object}.on()
      - ${Properties.light.object}.rgb('16748687')
      - ${Properties.light.object}.brightness('${Properties.light.brightness}')
      - System.sleep('0.4')
      - ${Properties.light.object}.off('0.2')
      - System.sleep('0.4')
      - ${Properties.light.object}.on('0.2')
      - System.sleep('0.4')
      - ${Properties.light.object}.off('0.2')
      - System.sleep('0.4')
      - ${Properties.light.object}.on('0.2')
      - System.sleep('0.4')
      - ${Properties.light.object}.off('0.2')
      - System.sleep('0.4')
      - ${Properties.light.object}.on('0.2')
    set:
      forceLightOn: 'true'

  lightWarnShort():
    runIf: ${Properties.light.object}.status is not 'offline'
    runFunctions:
      - ${Properties.light.object}.on()
      - ${Properties.light.object}.rgb('16748687')
      - ${Properties.light.object}.brightness('${Properties.light.brightness}')
      - System.sleep('1')

  lightSuccess():
    runIf: ${Properties.light.object}.status is not 'offline'
    runFunctions:
      - ${Properties.light.object}.on()
      - ${Properties.light.object}.rgb('4390713')
      - ${Properties.light.object}.brightness('${Properties.light.brightness}')
      - System.sleep('0.4')
      - ${Properties.light.object}.off('0.2')
      - System.sleep('0.4')
      - ${Properties.light.object}.on('0.2')
      - System.sleep('0.4')
      - ${Properties.light.object}.off('0.2')
      - System.sleep('0.4')
      - ${Properties.selfObjectName}.lightUnwarn()

  lightSuccessShort():
    runIf: ${Properties.light.object}.status is not 'offline'
    runFunctions:
      - ${Properties.light.object}.on()
      - ${Properties.light.object}.rgb('4390713')
      - ${Properties.light.object}.brightness('${Properties.light.brightness}')
      - System.sleep('1')
      - ${Properties.selfObjectName}.lightUnwarn()

  lightUnwarn():
    runIf: ${Properties.light.object}.status is on
    runFunctions:
      - ${Properties.light.object}.temperature('${Properties.light.temperature}')
      - ${Properties.light.object}.brightness('${Properties.light.brightness}')
    set:
      forceLightOn: 'false'

  secondaryLightWarn():
    runIf: ${Properties.light.secondary.object}.status is not 'offline'
    runFunctions:
      - ${Properties.light.secondary.object}.on()
      - ${Properties.light.secondary.object}.rgb('16748687')
      - ${Properties.light.secondary.object}.brightness('${Properties.light.secondary.brightness}')
      - System.sleep('0.4')
      - ${Properties.light.secondary.object}.off('0.2')
      - System.sleep('0.4')
      - ${Properties.light.secondary.object}.on('0.2')
      - System.sleep('0.4')
      - ${Properties.light.secondary.object}.off('0.2')
      - System.sleep('0.4')
      - ${Properties.light.secondary.object}.on('0.2')
      - System.sleep('0.4')
      - ${Properties.light.secondary.object}.off('0.2')
      - System.sleep('0.4')
      - ${Properties.light.secondary.object}.on('0.2')

  secondaryLightWarnShort():
    runIf: ${Properties.light.secondary.object}.status is not 'offline'
    runFunctions:
      - ${Properties.light.secondary.object}.on()
      - ${Properties.light.secondary.object}.rgb('16748687')
      - ${Properties.light.secondary.object}.brightness('${Properties.light.secondary.brightness}')
      - System.sleep('1')

  secondaryLightSuccess():
    runIf: ${Properties.light.secondary.object}.status is not 'offline'
    runFunctions:
      - ${Properties.light.secondary.object}.on()
      - ${Properties.light.secondary.object}.rgb('4390713')
      - ${Properties.light.secondary.object}.brightness('${Properties.light.secondary.brightness}')
      - System.sleep('0.4')
      - ${Properties.light.secondary.object}.off('0.2')
      - System.sleep('0.4')
      - ${Properties.light.secondary.object}.on('0.2')
      - System.sleep('0.4')
      - ${Properties.light.secondary.object}.off('0.2')
      - System.sleep('0.4')
      - ${Properties.selfObjectName}.secondaryLightUnwarn()

  secondaryLightSuccessShort():
    runIf: ${Properties.light.secondary.object}.status is not 'offline'
    runFunctions:
      - ${Properties.light.secondary.object}.on()
      - ${Properties.light.secondary.object}.rgb('4390713')
      - ${Properties.light.secondary.object}.brightness('${Properties.light.secondary.brightness}')
      - System.sleep('1')
      - ${Properties.selfObjectName}.secondaryLightUnwarn()

  secondaryLightUnwarn():
    runIf: ${Properties.light.secondary.object}.status is on
    runFunctions:
      - ${Properties.light.secondary.object}.temperature('${Properties.light.secondary.temperature}')
      - ${Properties.light.secondary.object}.brightness('${Properties.light.secondary.brightness}')

  forceLightOnIfWindowsAreOpened():
    runIf:
      - ${Properties.selfObjectName}.openWindows is true
      - ${Properties.light.object}.status is not 'offline'
    set:
      forceLightOn: 'true'
    runFunctions:
      - ${Properties.selfObjectName}.lightOn()
      - SystemWarn.send('Light ON (Window is opened @ ${Properties.selfObjectName})')
      - SystemNotify.send('Light ON (Window is opened @ ${Properties.selfObjectName})')

  awake():
    runIf:
      - ${Properties.selfObjectName}.sleeping is true
    set:
      ignoreMotion: 'false'
      sleeping: 'false'
      forceLightOff: 'true'
      forceLightOn: 'false'
    runFunctions:
      - SystemNotify.send('Awake (${Properties.selfObjectName})')
